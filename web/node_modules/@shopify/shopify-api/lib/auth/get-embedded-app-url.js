"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildEmbeddedAppUrl = exports.getEmbeddedAppUrl = void 0;
var tslib_1 = require("tslib");
var ShopifyErrors = tslib_1.__importStar(require("../error"));
var http_1 = require("../../runtime/http");
var shop_validator_1 = require("../utils/shop-validator");
var decode_host_1 = require("./decode-host");
function getEmbeddedAppUrl(config) {
    var _this = this;
    return function (_a) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
        var request, url, host;
        var adapterArgs = tslib_1.__rest(_a, []);
        return tslib_1.__generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, (0, http_1.abstractConvertRequest)(adapterArgs)];
                case 1:
                    request = _b.sent();
                    if (!request) {
                        throw new ShopifyErrors.MissingRequiredArgument('getEmbeddedAppUrl requires a request object argument');
                    }
                    if (!request.url) {
                        throw new ShopifyErrors.InvalidRequestError('Request does not contain a URL');
                    }
                    url = new URL(request.url, "https://".concat(request.headers.host));
                    host = url.searchParams.get('host');
                    if (typeof host !== 'string') {
                        throw new ShopifyErrors.InvalidRequestError('Request does not contain a host query parameter');
                    }
                    return [2 /*return*/, buildEmbeddedAppUrl(config)(host)];
            }
        });
    }); };
}
exports.getEmbeddedAppUrl = getEmbeddedAppUrl;
function buildEmbeddedAppUrl(config) {
    return function (host) {
        (0, shop_validator_1.sanitizeHost)(config)(host, true);
        var decodedHost = (0, decode_host_1.decodeHost)(host);
        return "https://".concat(decodedHost, "/apps/").concat(config.apiKey);
    };
}
exports.buildEmbeddedAppUrl = buildEmbeddedAppUrl;
//# sourceMappingURL=get-embedded-app-url.js.map
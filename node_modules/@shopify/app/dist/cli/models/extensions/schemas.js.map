{"version":3,"file":"schemas.js","sourceRoot":"","sources":["../../../../src/cli/models/extensions/schemas.ts"],"names":[],"mappings":"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","sourcesContent":["import {schema} from '@shopify/cli-kit'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ZodSchemaType<T> = schema.define.ZodType<T, any, any>\n\nexport const MetafieldSchema = schema.define.object({\n  namespace: schema.define.string(),\n  key: schema.define.string(),\n})\n\nexport const CapabilitiesSchema = schema.define.object({\n  network_access: schema.define.boolean().optional(),\n  block_progress: schema.define.boolean().optional(),\n  api_access: schema.define.boolean().optional(),\n})\n\nexport const TypeSchema = schema.define.object({\n  type: schema.define.string().default('ui_extension'),\n})\n\nexport const NewExtensionPointSchema = schema.define.object({\n  target: schema.define.string(),\n  module: schema.define.string(),\n  metafields: schema.define.array(MetafieldSchema).optional(),\n})\n\nexport const OldExtensionPointsSchema = schema.define.array(schema.define.string()).default([])\nexport const NewExtensionPointsSchema = schema.define.array(NewExtensionPointSchema)\nexport const ExtensionPointSchema = schema.define.union([OldExtensionPointsSchema, NewExtensionPointsSchema])\n\nexport const BaseUIExtensionSchema = schema.define.object({\n  name: schema.define.string(),\n  type: schema.define.string().default('ui_extension'),\n  extensionPoints: schema.define.any().optional(),\n  capabilities: CapabilitiesSchema.optional(),\n  metafields: schema.define.array(MetafieldSchema).optional().default([]),\n  categories: schema.define.array(schema.define.string()).optional(),\n})\n\nexport const ThemeExtensionSchema = schema.define.object({\n  name: schema.define.string(),\n  type: schema.define.literal('theme'),\n})\n\nexport const BaseFunctionConfigurationSchema = schema.define.object({\n  name: schema.define.string(),\n  type: schema.define.string(),\n  description: schema.define.string().optional().default(''),\n  build: schema.define.object({\n    command: schema.define.string(),\n    path: schema.define.string().optional(),\n  }),\n  configurationUi: schema.define.boolean().optional().default(true),\n  ui: schema.define\n    .object({\n      enable_create: schema.define.boolean().optional(),\n      paths: schema.define\n        .object({\n          create: schema.define.string(),\n          details: schema.define.string(),\n        })\n        .optional(),\n    })\n    .optional(),\n  apiVersion: schema.define.string(),\n  input: schema.define\n    .object({\n      variables: schema.define\n        .object({\n          namespace: schema.define.string(),\n          key: schema.define.string(),\n        })\n        .optional(),\n    })\n    .optional(),\n})\n\nexport type NewExtensionPointSchemaType = schema.define.infer<typeof NewExtensionPointSchema>\n\n// Base config type that all config schemas must extend.\nexport type BaseConfigContents = schema.define.infer<typeof BaseUIExtensionSchema>\n"]}
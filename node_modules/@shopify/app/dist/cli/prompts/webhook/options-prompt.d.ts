import { WebhookTriggerOptions } from '../../services/webhook/trigger-options.js';
/**
 * Flags collected from the command line parameters
 */
export interface WebhookTriggerFlags {
    topic?: string;
    apiVersion?: string;
    deliveryMethod?: string;
    address?: string;
    sharedSecret?: string;
}
/**
 * Collect all required data, validate and transform values into options for the Service
 * Some UX decisions:
 * - Flags validation will happen before we request any prompts
 * - Any option not passed as a flag will be requested via prompt
 * - In the case of having a flag for address and not for delivery-method, the delivery-method will be inferred from it
 * - An http delivery method sent to a localhost address will be transformed into a localhost delivery method.
 *   `localhost` is only internal: it requests core to return the data so that the plugin will deliver it locally without
 *   needing ngrok
 *
 * @param flags - Flags collected from the command-line arguments
 * @param availableVersions - Available API Versions
 * @returns flags/prompts transformed into WebhookTriggerOptions to pass to the service
 */
export declare function optionsPrompt(flags: WebhookTriggerFlags, availableVersions: string[]): Promise<WebhookTriggerOptions>;
